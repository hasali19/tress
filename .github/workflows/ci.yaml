name: CI

on:
  workflow_dispatch:
  push:

permissions:
  checks: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check_server:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout git repo
        uses: actions/checkout@v4

      - uses: Swatinem/rust-cache@v2

      - name: Check formatting
        run: cargo fmt --all -- --check

      - name: Run clippy
        run: cargo clippy --workspace --all-features -- -Dwarnings


  build_server:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-musl
          - aarch64-unknown-linux-musl
    steps:
      - name: Checkout git repo
        uses: actions/checkout@v4
        with:
          submodules: true

      - uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.target }}

      - name: Download cross
        run: |
          wget https://github.com/rust-embedded/cross/releases/download/v0.2.1/cross-v0.2.1-x86_64-unknown-linux-musl.tar.gz
          sudo tar -xvf cross-v0.2.1-x86_64-unknown-linux-musl.tar.gz -C /usr/local/bin

      - name: Build application
        run: |
          cross build --release --bin tress --target ${{ matrix.target }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: tress-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/tress

  check_ui:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout git repo
        uses: actions/checkout@v4

      - working-directory: ui
        run: |
          npm install
          npx @biomejs/biome ci

  build_ui:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout git repo
        uses: actions/checkout@v4

      - name: Build frontend
        working-directory: ui
        run: |
          npm install
          npm run build

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: tress-ui
          path: ui/dist

  deploy:
    runs-on: ubuntu-latest
    needs:
      - check_server
      - build_server
    if: success() && github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      packages: write
    steps:
      - name: Checkout git repo
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - run: |
          mkdir -p artifacts/linux/amd64 artifacts/linux/arm64
          mv -T artifacts/tress-x86_64-unknown-linux-musl artifacts/linux/amd64
          mv -T artifacts/tress-aarch64-unknown-linux-musl artifacts/linux/arm64
          ls -R artifacts

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ghcr.io/hasali19/tress:latest
          platforms: linux/amd64,linux/arm64
