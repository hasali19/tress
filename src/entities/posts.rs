//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "posts")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: Uuid,
    pub feed_id: Uuid,
    pub title: String,
    pub description: Option<String>,
    pub publish_time: String,
    #[sea_orm(unique)]
    pub url: String,
    pub thumbnail: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::feeds::Entity",
        from = "Column::FeedId",
        to = "super::feeds::Column::Id",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    Feeds,
}

impl Related<super::feeds::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Feeds.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
